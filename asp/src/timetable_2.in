%initialise
%Assume class can start from 9am to 6pm
%room(145,100).
room(308,190).
room(311,150).
%room(144,90).timeslot(m,9).
day(m). day(tu). day(w). day(th). day(f).
slot(9..17).

course(y1;;y2).
subject(hardware,145,3).
subjectincourse(hardware, y1).

subject(mathematical_methods,145,3).
subjectincourse(mathematical_methods, y1).

subject(architecture,185,3).
subjectincourse(architecture, y1).

subject(databases_i,145,3).
subjectincourse(databases_i, y1).

subject(reasoning_for_program,185,3).
subjectincourse(reasoning_for_program, y1).

subject(network, 145, 3).
subjectincourse(network, y2).

subject(operating_systems, 145, 3).
subjectincourse(operating_systems, y2).

subject(artificial_intelligence, 145, 3).
subjectincourse(artificial_intelligence, y2).

clash(operating_systems,artificial_intelligence).
clash(hardware, mathematical_methods).
clash(hardware, architecture).
clash(hardware, databases_i).
clash(hardware, reasoning_for_program).
clash(mathematical_methods, hardware).
clash(architecture, hardware).
% class_with_year(hardware,308,w,9,y1).
% class_with_year(mathematical_methods,308,w,9,y1).
class_with_year(hardware,308,w,9,y1).
class_with_year(hardware,308,w,10,y1).


class_with_year(operating_systems,311,w,12,y2).
class_with_year(operating_systems,311,w,13,y2).

% class_with_year(architecture, 308,w,15,y1).
% class_with_year(architecture,311,w,12,y1).
lecturer(tony).
teaches(tony, hardware).
teaches(tony, architecture).
teaches(tony, operating_systems).
%lecturer(a,6).
%lecturer(b,6).
%lecturer(c,6).
% Generate
% title room day start_hour
%{class(T,R,D,S): timeslot(D,S)} = R :- lecturer(L,R).

%Define
timeslot(D,S) :- day(D), slot(S).
% 0 { class(T,R,D,S) } 1 :- room(R,_), timeslot(D,S),subject(T,_,_).
0 { class_with_year(T,R,D,S,Y) } 1 :- room(R,_), timeslot(D,S),subject(T,_,_), subjectincourse(T,Y).
class_has_enough_hours(T):- H { class_with_year(T,_,_,_,_) } H , subject(T,_,H).
1 { slot_occupied(D,S,Y) } 1 :- class_with_year(_,_,D,S,Y).
max_six_hour_a_day(D,Y):- not { slot_occupied(D,_,Y) } 6, timeslot(D,_), course(Y).
slot_teaches(L,D,S) :- class_with_year(T,_,D,S,_), teaches(L,T), lecturer(L).
max_four_hour_a_day(L,D) :- not { slot_teaches(L,D,_) } 4, timeslot(D,_), lecturer(L).
lecturer_clash(L,D,S) :- class_with_year(T1,_,D,S,_), class_with_year(T2,_,D,S,_), T1!=T2, teaches(L,T1), teaches(L,T2), lecturer(L).
no_9_to_5(Y) :- class_with_year(_,_,D,S1,Y), class_with_year(_,_,D,S2,Y), S1<11, S2>15.
three_consecutive_hour_for_lecturer(L,D) :- class_with_year(S1,_,D,S,_), class_with_year(S2,_,D,S+1,_), class_with_year(S3,_,D,S+2,_), teaches(L,S1),teaches(L,S2), teaches(L,S3), lecturer(L).


% in_course(Y) :- class(T,R,D,S), timeslot(D,S), room(R,_), subject(T,_,_), subjectincourse(T,Y), course(Y).
% class_with_year(T,R,D,S,Y) :- class(T,R,D,S), subjectincourse(T,Y).
% unique_timeslot(T,D,S,Y):- { class(T,_,D,S):in_course(Y) } 1, timeslot(D,S), course(Y).
% nine_to_eleven_am(T) :- class(T,_,_,S), S= 9..10.
% four_to_six_pm(T) :- class(T,_,_,S), S= 16..17.
1 { day_occupied(T,D,Y) } 1 :- class_with_year(T,_,D,_,Y).
force_2_hour_slot(T) :- { day_occupied(T,_,_) } (H+1)/2, subject(T,_,H).
%Constraints
% checks if classes has been allocated properly.
:- not class_has_enough_hours(T), subject(T,_,_).
% :- not 3 { class(T,_,_,_) } 3, subject(T,_,_).

% checks if room size is big enough
%:- class(T,R,D,S), room(R,C0), subject(T,C1,_), C1 < C0.


%Each subject only takes 2 day a week
:- not force_2_hour_slot(T), subject(T,_,_).

%Each timeslot is unique
% :- not unique_timeslot(T,D,S,Y), timeslot(D,S), course(Y), not clash(T,_) | not clash(_,T).
:- class_with_year(A,_,D,S,Y), class_with_year(B,_,D,S,Y), A!=B, not clash(A,B).
%Students should not have more than six hours in any one day
:- max_six_hour_a_day(D,Y), timeslot(D,_), course(Y).

%Same day class of same lecturer maximum 2 hours
%If the there is a 2 hour class that day make it consecutive
:- class_with_year(T,_,D,S,Y), class_with_year(T,_,D,S+X,Y), X=2..8.

%No three consecutive hour
:- class_with_year(_,_,D,S,Y), class_with_year(_,_,D,S+1,Y), class_with_year(_,_,D,S+2,Y), timeslot(D,S), course(Y).

%Same day same room
:- class_with_year(T,R1,D,_,Y), class_with_year(T,R2,D,_,Y), R1!=R2.

%Same lecturer same slot
:- lecturer_clash(L,D,S).

%Max 4 hour a day for lecturer
:- max_four_hour_a_day(L,D), lecturer(L), timeslot(D,_).

%No 9 to 5
% :- class_with_year(_,_,D,S1,Y), class_with_year(_,_,D,S2,Y), S1<11, S2>15.
:- no_9_to_5(Y), course(Y).

%No three consecutive hour for lecturer
% :- class_with_year(S1,_,D,S,_), class_with_year(S2,_,D,S+1,_), class_with_year(S3,_,D,S+2,_), teaches(L,S1),teaches(L,S2), teaches(L,S3), lecturer(L).
:- three_consecutive_hour_for_lecturer(L,D), lecturer(L), timeslot(D,_).


% :- class_with_year(_,_,w,9,y1).
%Optimisation
%Make pack as much lessons of the same course on the same day as possible
%#minimize { |D-DD| : add(X,D,S), add(XX,DD,SS) }.


#show class_with_year/5.
% #show lecturer_clash/3.
% #show class_has_enough_hours/1.
% #show max_two_day_a_week/1.
